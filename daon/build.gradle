plugins {
    id 'java'
    id 'jacoco'
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.dokka"
    id "com.bmuschko.nexus"
}

group 'kr.bydelta'
version "2.1.0"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "kr.bydelta:koalanlp-core:${corePublishedVer}"
    implementation "ch.qos.logback:logback-classic:1.2.0" // Daon Core
    implementation "com.google.protobuf:protobuf-java:3.0.0" // Daon Core
    compile fileTree(dir: 'lib', include: '*.jar')

    testImplementation "kr.bydelta:koalanlp-core:${corePublishedVer}:tests"
    testRuntime "org.jetbrains.kotlin:kotlin-reflect"
    testRuntime "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0"
    testImplementation("org.amshove.kluent:kluent:1.49") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation('org.spekframework.spek2:spek-dsl-jvm:2.0.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly('org.spekframework.spek2:spek-runner-junit5:2.0.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
}

task fatJar(type: Jar) {
    classifier = "assembly"
    from {
        configurations.compile.filter { !it.isDirectory() }.collect { zipTree(it) }
    }
    with jar
}

apply from: rootProject.file('test.gradle')
apply from: rootProject.file('publish.gradle')

artifacts{
    archives fatJar
}
