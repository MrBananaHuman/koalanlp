plugins {
    id 'java'
    id 'jacoco'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.dokka" version "0.10.0"
    id "com.bmuschko.nexus" version "2.3.1"
    id "io.codearte.nexus-staging" version "0.21.1"
}

allprojects {
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/spekframework/spek" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://jitpack.io" }
    }

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 10, 'minutes'
        }
    }
}

ext.nexusUsername = properties.'ossrhUsername' as String ?: 'Foo'
ext.nexusPassword = properties.'ossrhPassword' as String ?: 'Foo'

// Dokka aggregation을 위한 library
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

// Dokka aggregation
dokka {
    outputDirectory = "$rootDir/docs/api"
    outputFormat = "html"

    configuration {
        moduleName = "$rootProject.name"
        jdkVersion = 8
        noStdlibLink = false

        doFirst {
            sourceDirs = files(subprojects.collect { p ->
                def path = new File(p.projectDir, "/src/main/kotlin")

                def relativePath = rootDir.toPath().relativize(path.toPath()).toString()
                linkMapping {
                    dir = path
                    url = "https://github.com/koalanlp/koalanlp/blob/master/$relativePath"
                    suffix = "#L"
                }

                return path
            })

            includes = ['docs/index.md', *subprojects.collect { "${it.projectDir}/index.md" }]
        }
    }
}